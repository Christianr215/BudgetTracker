"""users table and more

Revision ID: 67a21c9acaae
Revises: 
Create Date: 2025-08-15 22:21:51.301065

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '67a21c9acaae'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('utilities', sa.Float(), nullable=False),
    sa.Column('food', sa.Float(), nullable=False),
    sa.Column('Miscellaneous', sa.Float(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('utilities >= 0 AND food >= 0 AND Miscellaneous >= 0', name='expense_non_negative'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_expense_user_id'), ['user_id'], unique=False)

    op.create_table('income',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('amount >= 0', name='amount_positive'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('income', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_income_amount'), ['amount'], unique=False)
        batch_op.create_index(batch_op.f('ix_income_user_id'), ['user_id'], unique=False)

    op.create_table('savings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goal', sa.Float(), nullable=False),
    sa.Column('saved', sa.Float(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('goal >= 0 AND saved >= 0', name='savings_non_negative'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('savings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_savings_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('savings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_savings_user_id'))

    op.drop_table('savings')
    with op.batch_alter_table('income', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_income_user_id'))
        batch_op.drop_index(batch_op.f('ix_income_amount'))

    op.drop_table('income')
    with op.batch_alter_table('expense', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expense_user_id'))

    op.drop_table('expense')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    # ### end Alembic commands ###
